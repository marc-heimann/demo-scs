<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.1.RELEASE</version>
	</parent>
	
	<groupId>com.vanderlande</groupId>
	<artifactId>DemoSCS</artifactId>	
	<version>0.0.59-SNAPSHOT</version>
	<name>DemoSCS</name>
	<description>Demo project to demonstrate CloudNative Computing</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Greenwich.RC2</spring-cloud.version>
		<docker.repository>heimann</docker.repository>
		<imageName>demo-scs</imageName>
		
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    	<asciidoctorj.pdf.version>1.5.0-alpha.16</asciidoctorj.pdf.version>
    	<asciidoctorj.diagram.version>1.5.18</asciidoctorj.diagram.version>
    	<asciidoctor.maven-plugin.version>1.6.0</asciidoctor.maven-plugin.version>
    	<sourceDirectory>./src/main/asciidoc</sourceDirectory>
    	<outputDirectory>./src/main/resources/static/documentation</outputDirectory>

    	<dockerfile-maven-version>1.4.9</dockerfile-maven-version>
    	<cucumber.version>4.8.0</cucumber.version>
    	<cucumber.junit.version>4.8.0</cucumber.junit.version>
    	<cucumber.spring.version>4.8.0</cucumber.spring.version>
    	<commons-io.version>1.3.2</commons-io.version>
    	<selenium.version>3.141.59</selenium.version>
    	<org.sahli.asciidoc.confluence.publisher.version>0.7.0</org.sahli.asciidoc.confluence.publisher.version>
    	<rootConfluenceUrl>http://confluence-confluence-server.confluence</rootConfluenceUrl>
    	<confluence.spaceKey>CD</confluence.spaceKey>
    	<confluence.documentation.ancestorId>327713</confluence.documentation.ancestorId>
    	<confluence.publisherUserName>documentation-publisher</confluence.publisherUserName>
    	<confluence.publisherPassword>vanderlande</confluence.publisherPassword>
    	<asciidocRootFolder>./src/main/asciidoc</asciidocRootFolder>
    	<confluence.publishingStrategy>APPEND_TO_ANCESTOR</confluence.publishingStrategy>
    	<confluence.test-documentation.ancestorId>327715</confluence.test-documentation.ancestorId>
    	<cucumberTestReportFolder>docs</cucumberTestReportFolder> 
    	<org.bsc.maven.confluence.reporting.version>6.3.2</org.bsc.maven.confluence.reporting.version>
    	
    	<chartName>demo-scs</chartName>
    	<skipSnapshotChart>false</skipSnapshotChart>

    	<chartmuseumUrl>http://51.105.96.95:8080/</chartmuseumUrl>
    	<helmVersion>3.0.0</helmVersion>
    	<chartRepoUsername>vanderlande</chartRepoUsername>
    	<chartRepoPassword>vanderlande</chartRepoPassword>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-streams</artifactId>
		</dependency>		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
			<version>2.1.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-oauth2</artifactId>
			<version>2.1.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream</artifactId>
			<version>2.1.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-kafka</artifactId>
			<version>2.1.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-hal-browser</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-test-support</artifactId>
			<version>2.1.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
		</dependency>
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-java</artifactId>
		    <version>${cucumber.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-junit</artifactId>
		    <version>${cucumber.junit.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-spring</artifactId>
		    <version>${cucumber.spring.version}</version>
		</dependency>
		<dependency>
	        <groupId>org.seleniumhq.selenium</groupId>
	        <artifactId>selenium-server</artifactId>
	        <version>${selenium.version}</version>
	    </dependency>
		<dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.sonarsource.scanner.maven</groupId>
		    <artifactId>sonar-maven-plugin</artifactId>
		    <version>3.6.0.1398</version>
		</dependency>
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger2</artifactId>
		    <version>2.9.2</version>
		</dependency>
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger-ui</artifactId>
		    <version>2.9.2</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>		
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>				
			</plugin>   						
		</plugins>		
		
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.asciidoctor
										</groupId>
										<artifactId>
											asciidoctor-maven-plugin
										</artifactId>
										<versionRange>
											[${asciidoctor.maven-plugin.version},)
										</versionRange>
										<goals>
											<goal>
												process-asciidoc
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>	

	<profiles>
	
	  <profile>
	  	<id>release</id>
	  	<build>
	  		<plugins>
	  			<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>		
				</plugin>
	  			<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>				
				</plugin>
	  			<plugin>
			      <groupId>com.deviceinsight.helm</groupId>
			      <artifactId>helm-maven-plugin</artifactId>
			      <version>2.4.1</version>
			      <configuration>
			        <chartRepoUsername>${chartRepoUsername}</chartRepoUsername>
			        <chartRepoPassword>${chartRepoPassword}</chartRepoPassword>
			        <chartName>${chartName}</chartName>
			        <helmGroupId>com.deviceinsight.helm</helmGroupId>		       
			        <chartRepoUrl>${chartmuseumUrl}</chartRepoUrl>
			        <helmVersion>${helmVersion}</helmVersion>
			        <skipSnapshots>${skipSnapshotChart}</skipSnapshots>
			        <strictLint>true</strictLint>
			        <valuesFile>src/test/helm/${chartName}/values.yaml</valuesFile>
			      </configuration>
			      <executions>
			        <execution>
			          <goals>
			            <goal>package</goal>
			            <goal>lint</goal>
			            <goal>template</goal>
			            <goal>deploy</goal>
			          </goals>
			        </execution>
			      </executions>
			    </plugin>
	  		</plugins>
	  	</build>	  	
	  </profile>
	
	  <!-- Profile for regular build -->
	  <profile>
	    <id>build</id>
	    <build>
	      <plugins>
	      	<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>		
			</plugin>			
	        <plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.5</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<!-- attached to Maven test phase -->
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
		        <groupId>org.asciidoctor</groupId>
		        <artifactId>asciidoctor-maven-plugin</artifactId>
		        <version>${asciidoctor.maven-plugin.version}</version>
		        <dependencies>
		        	<dependency>
		        		<groupId>org.asciidoctor</groupId>
      					<artifactId>asciidoctorj-diagram</artifactId>
      					<version>${asciidoctorj.diagram.version}</version>
		        	</dependency>
		        	<dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-pdf</artifactId>
                        <version>${asciidoctorj.pdf.version}</version>
                    </dependency>                   
		        </dependencies>
		        <configuration>
		        	<sourceDirectory>${sourceDirectory}</sourceDirectory>
        			<outputDirectory>${outputDirectory}</outputDirectory>
		        	<requires>
		        		<require>asciidoctor-diagram</require>
		        	</requires>
		        </configuration>	        
		    </plugin>		    
		    <plugin>
			      <groupId>com.deviceinsight.helm</groupId>
			      <artifactId>helm-maven-plugin</artifactId>
			      <version>2.4.1</version>
			      <configuration>
			      	<chartRepoUsername>${chartRepoUsername}</chartRepoUsername>
			        <chartRepoPassword>${chartRepoPassword}</chartRepoPassword>
			        <chartName>${chartName}</chartName>
			        <helmGroupId>com.deviceinsight.helm</helmGroupId>		       
			        <chartRepoUrl>${chartmuseumUrl}</chartRepoUrl>
			        <helmVersion>${helmVersion}</helmVersion>
			        <skipSnapshots>${skipSnapshotChart}</skipSnapshots>
			        <strictLint>true</strictLint>
			        <valuesFile>src/test/helm/${chartName}/values.yaml</valuesFile>
			      </configuration>
			      <executions>
			        <execution>
			          <goals>
			            <goal>package</goal>
			            <goal>lint</goal>
			            <goal>template</goal>
			            <goal>deploy</goal>
			          </goals>
			        </execution>
			      </executions>
			    </plugin>		    
	      </plugins>    
	    </build>
	  </profile>
		
	
	  <!-- Profile for documentation build and publish -->
	  <profile>
	    <id>documentation</id>
	    <build>
	      <plugins>
	      	<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
 				<configuration>
	                <filesets>
	                    <fileset>
	                        <directory>src/main/resources/static/documentation</directory>	                                            
	                        <followSymlinks>false</followSymlinks>
	                    </fileset>
	                </filesets>
            	</configuration>			
			</plugin>			
	        <plugin>
		        <groupId>org.asciidoctor</groupId>
		        <artifactId>asciidoctor-maven-plugin</artifactId>
		        <version>${asciidoctor.maven-plugin.version}</version>
		        <dependencies>
		        	<dependency>
		        		<groupId>org.asciidoctor</groupId>
      					<artifactId>asciidoctorj-diagram</artifactId>
      					<version>${asciidoctorj.diagram.version}</version>
		        	</dependency>
		        	<dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-pdf</artifactId>
                        <version>${asciidoctorj.pdf.version}</version>
                    </dependency>                   
		        </dependencies>
		        <configuration>
		        	<sourceDirectory>${sourceDirectory}</sourceDirectory>
        			<outputDirectory>${outputDirectory}</outputDirectory>
		        	<attributes>
		        		<!-- Uses the <img src="data:image/png;base64> syntax for diagrams -->
		        		<data-uri />
		        		<!-- Allows access to remote files (eg. code on external GitHub) -->		        		
		        		<!-- imagesdir>./images</imagesdir-->
                        <allow-uri-read>true</allow-uri-read>
		        	</attributes>
		        	<requires>
		        		<require>asciidoctor-diagram</require>
		        	</requires>
		        </configuration>        
				<executions>
                    <execution>                    
                        <id>generate-html-doc</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>html5</backend>
                        </configuration>
                    </execution>                     
 					<execution>
                        <id>generate-pdf-doc</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>pdf</backend>                    
                            <sourceHighlighter>coderay</sourceHighlighter>
                            <attributes>
                                <icons>font</icons>
                                <pagenums />
                                <toc />
                                <idprefix />
                                <idseparator>-</idseparator>
                            </attributes>
                        </configuration>
                    </execution>
    
                </executions>		        
		    </plugin>
		    <plugin>
	    		<groupId>org.sahli.asciidoc.confluence.publisher</groupId>
	    		<artifactId>asciidoc-confluence-publisher-maven-plugin</artifactId>
	    		<version>${org.sahli.asciidoc.confluence.publisher.version}</version>
	    		<configuration>
		        	<asciidocRootFolder>${asciidocRootFolder}</asciidocRootFolder>
		        	<sourceEncoding>UTF-8</sourceEncoding>
		        	<rootConfluenceUrl>${rootConfluenceUrl}</rootConfluenceUrl>
		        	<spaceKey>${confluence.spaceKey}</spaceKey>
		        	<ancestorId>${confluence.documentation.ancestorId}</ancestorId>
		        	<username>${confluence.publisherUserName}</username>
		        	<password>${confluence.publisherPassword}</password>
		        	<pageTitlePrefix xml:space="preserve" />
		        	<publishingStrategy>${confluence.publishingStrategy}</publishingStrategy>
		        	<pageTitleSuffix xml:space="preserve"> [${project.version}]</pageTitleSuffix>
		        	<versionMessage>Version ${project.version}</versionMessage>
			        	<attributes>
			            	<version>${project.version}</version>
			            	<someOtherKey>value</someOtherKey>
			        	</attributes>
	    		</configuration>
	    		<executions>
                	<execution>
				        <id>publish-documentation</id>
				        <phase>generate-resources</phase>
				        <goals>
				            <goal>publish</goal>
				        </goals>
				    </execution>
			    </executions>  
	    	</plugin>
	      </plugins>    
	    </build>
	  </profile>
	  
	  <!-- Profile for acceptance testing -->
	  <profile>
	    <id>acceptance-test</id>
	    <build>
	      <plugins>
	      	<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>		
			</plugin>
	        <plugin>
	          <artifactId>maven-failsafe-plugin</artifactId>
	          <version>2.12</version>
	          <executions>
	            <execution>
	              <goals>
	                <goal>integration-test</goal>
	                <goal>verify</goal>	    
	              </goals>
	            </execution>
	          </executions>
	        </plugin>
	        <plugin>
			  <groupId>org.codehaus.mojo</groupId>
			  <artifactId>build-helper-maven-plugin</artifactId>
			  <version>1.7</version>
			  <executions>
			    <execution>
			      <id>add-source</id>
			      <phase>generate-sources</phase>
			      <goals>
			        <goal>add-test-source</goal>
			      </goals>
			      <configuration>
			        <sources>
			          <source>src/it/java</source>
			        </sources>
			      </configuration>
			    </execution>
			    <execution>
			      <id>add-resource</id>
			      <phase>generate-sources</phase>
			      <goals>
			        <goal>add-test-resource</goal>
			      </goals>
			      <configuration>
			        <resources>
			          <resource>
			            <directory>src/it/resources</directory>
			          </resource>
			        </resources>
			      </configuration>
			    </execution>
			  </executions>
			</plugin>			
		    <plugin>
	    		<groupId>org.sahli.asciidoc.confluence.publisher</groupId>
	    		<artifactId>asciidoc-confluence-publisher-maven-plugin</artifactId>
	    		<version>${org.sahli.asciidoc.confluence.publisher.version}</version>
	    		<configuration>
		        	<asciidocRootFolder>./target/${cucumberTestReportFolder}</asciidocRootFolder>
		        	<sourceEncoding>UTF-8</sourceEncoding>
		        	<rootConfluenceUrl>${rootConfluenceUrl}</rootConfluenceUrl>
		        	<spaceKey>${confluence.spaceKey}</spaceKey>
		        	<ancestorId>${confluence.test-documentation.ancestorId}</ancestorId>
		        	<username>${confluence.publisherUserName}</username>
		        	<password>${confluence.publisherPassword}</password>
		        	<pageTitlePrefix xml:space="preserve" />
		        	<publishingStrategy>${confluence.publishingStrategy}</publishingStrategy>
		        	<pageTitleSuffix xml:space="preserve"> [${project.version}]</pageTitleSuffix>
		        	<versionMessage>Version ${project.version}</versionMessage>
			        	<attributes>
			            	<version>${project.version}</version>
			            	<someOtherKey>value</someOtherKey>
			        	</attributes>
	    		</configuration>
	    		<executions>
                	<execution>
				        <id>publish-documentation</id>
				        <phase>verify</phase>
				        <goals>
				            <goal>publish</goal>
				        </goals>
				    </execution>
			    </executions>  
	    	</plugin>
			<plugin>
		        <groupId>org.asciidoctor</groupId>
		        <artifactId>asciidoctor-maven-plugin</artifactId>
		        <version>${asciidoctor.maven-plugin.version}</version>
		        <dependencies>
		        	<dependency>
		        		<groupId>org.asciidoctor</groupId>
      					<artifactId>asciidoctorj-diagram</artifactId>
      					<version>${asciidoctorj.diagram.version}</version>
		        	</dependency>
		        	<dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-pdf</artifactId>
                        <version>${asciidoctorj.pdf.version}</version>
                    </dependency>                   
		        </dependencies>
		        <configuration>
		        	<sourceDirectory>${sourceDirectory}</sourceDirectory>
        			<outputDirectory>${outputDirectory}</outputDirectory>
		        	<attributes>
		        		<!-- Uses the <img src="data:image/png;base64> syntax for diagrams -->
		        		<data-uri />
		        		<!-- Allows access to remote files (eg. code on external GitHub) -->
                        <allow-uri-read>true</allow-uri-read>
		        	</attributes>
		        	<requires>
		        		<require>asciidoctor-diagram</require>
		        	</requires>
		        </configuration>
		    </plugin>
        	<plugin>
			    <groupId>com.github.cukedoctor</groupId>
			    <artifactId>cukedoctor-maven-plugin</artifactId>
			    <version>1.2.1</version>
			         <configuration>
			            <outputFileName>${project.artifactId}-test-documentation</outputFileName>
			            <documentTitle>${project.artifactId} Acceptance Test Report</documentTitle>
			            <outputDir>${cucumberTestReportFolder}</outputDir>
			            <toc>left</toc>
			            <numbered>false</numbered>
			            <docVersion>${project.version}</docVersion>
			         </configuration>
			        <executions>
			            <execution>
			                <goals>
			                    <goal>execute</goal>
			                </goals>
			                <phase>package</phase>
			            </execution>
			        </executions>
			</plugin>
			<plugin> 
				<groupId>com.google.code.maven-replacer-plugin</groupId> 
				<artifactId>replacer</artifactId> 
				<version>1.5.3</version> 
				<executions> 
					<execution> 
						<phase>package</phase> 
						<goals> 
							<goal>replace</goal> 
						</goals> 
					</execution> 
				</executions> 
				<configuration> 
					<file>target/docs/${project.artifactId}-test-documentation.adoc</file> 
					<replacements> 
						<replacement> 
							<token>icon:thumbs-up</token> 
							<value /> 
						</replacement>
					</replacements> 
				</configuration> 
			</plugin> 		    
	      </plugins>    
	    </build>
	  </profile>
	</profiles> 	

	<repositories>
	  <repository>
	    <id>maven-group</id>
	    <url>http://52.157.237.13:8080/repository/maven-group/</url>
	  </repository>
	</repositories>	

	<distributionManagement>
	  <snapshotRepository>
	    <id>nexus-snapshots</id>
	    <url>http://52.157.237.13:8080/repository/maven-snapshots/</url>
	  </snapshotRepository>
	  <repository>
	    <id>nexus-releases</id>
	    <url>http://52.157.237.13:8080/repository/maven-releases/</url>
	  </repository>
	</distributionManagement>
	
	<organization>
		<name>Vanderlande</name>
		<url>vanderlande</url>
	</organization>
	
	<scm>		
		<developerConnection>scm:git:https://github.com:marc-heimann/demo-scs</developerConnection>
		<connection>scm:git:https://github.com:marc-heimann/demo-scs</connection>
		<tag>HEAD</tag>
		<url>http://github.com</url>
	</scm>
</project>